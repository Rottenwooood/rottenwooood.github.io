<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>C6H4O2のBLOG</title><link>https://rottenwooood.github.io</link><description>放一些笔记和文章之类的东西，总之会经常更新的</description><copyright>C6H4O2のBLOG</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://s21.ax1x.com/2024/11/02/pADbhwT.jpg</url><title>avatar</title><link>https://rottenwooood.github.io</link></image><lastBuildDate>Sat, 30 Nov 2024 15:40:25 +0000</lastBuildDate><managingEditor>C6H4O2のBLOG</managingEditor><ttl>60</ttl><webMaster>C6H4O2のBLOG</webMaster><item><title>江科大STM32学习笔记</title><link>https://rottenwooood.github.io/post/jiang-ke-da-STM32-xue-xi-bi-ji.html</link><description>以下是学习江科大STM32教程的一些学习笔记，看完后会出一期完整文字版教程，改成易于阅读和学习的形式同步发在CSDN和bilibili上，敬请期待&#13;
---&#13;
11/30&#13;
### STM32F103C8T6规格&#13;
&#13;
- 系列:主流系列STM32F1&#13;
- 内核:ARM Cortex-M3&#13;
- 主频:72MHz&#13;
- RAM:20K (SRAM)|&#13;
- ROM:64K (Flash)&#13;
- 供电:2.0~3.6V(标准3.3V)&#13;
- 封装:LQFP48&#13;
&#13;
**片上资源/外设**&#13;
![图片](https://github.com/user-attachments/assets/eaf00c00-0d7f-4f01-bd39-3e20adceb884)&#13;
### 命名规则&#13;
![图片](https://github.com/user-attachments/assets/63081ca0-a835-413a-be15-4f7b907478c6)&#13;
### 系统结构&#13;
![图片](https://github.com/user-attachments/assets/f4405a48-9fe5-4f8e-9b98-cd8428ef0c4a)&#13;
### 引脚定义&#13;
蓝色：最小系统相关&#13;
红色：最小系统相关&#13;
加粗：常用&#13;
&#13;
FT：引脚可容忍5V电压（但板子本身最高只输出3.3V）&#13;
![image-20241124211055250](https://github.com/user-attachments/assets/18ab6b45-fef5-4f67-8418-2d968239f0c6)&#13;
### 启动配置&#13;
![图片](https://github.com/user-attachments/assets/d889c986-5922-484f-9981-55d4d4255788)&#13;
- 最常用&#13;
- 串口下载用，系统存储器存储bootloader程序，其接收串口数据，刷新到主闪存中&#13;
- 用于程序调试&#13;
### 最小系统电路&#13;
![图片](https://github.com/user-attachments/assets/dcf17f84-01b5-4258-80aa-a169276b200a)&#13;
### 兼容&#13;
GigaDevice/MindMotion兼容STM32&#13;
### 型号分类及缩写&#13;
![图片](https://github.com/user-attachments/assets/525a2442-c2be-463e-a7fd-85f2e9963993)&#13;
### 新建工程步骤&#13;
- 建立工程文件夹，Keil中新建工程，选择型号&#13;
- 工程文件夹里建立Start、Library、User等文件夹，复制固件库里面的文件到工程文件夹&#13;
- 工程里对应建立Start、Library、User等同名称的分组，然后将文件夹内的文件添加到工程分组里&#13;
- 工程选项，C/C++，Include Paths内声明所有包含头文件的文件夹&#13;
- 工程选项，C/C++，Define内定义USE_STDPERIPH_DRIVER（使用库函数时）&#13;
- 工程选项，Debug，下拉列表选择对应调试器，Settings，Flash Download里勾选Reset and Run（STLINK）&#13;
### 基于寄存器开发&#13;
需要看着数据手册&#13;
### 基于库函数开发&#13;
需要随时去查看函数的声明，定义和说明&#13;
### 工程架构&#13;
![图片](https://github.com/user-attachments/assets/cc5cb2f0-d82d-41ca-828d-f9591e6a9bec)&#13;
Manage Project Items中选择三个文件夹中的文件&#13;
&#13;
- Start：先添加md_s文件，然后添加其他.c.h文件&#13;
- Library：所有&#13;
- User：所有&#13;
&#13;
### 工程选项&#13;
&#13;
- C/C++&#13;
  - include paths,添加三个文件夹&#13;
  - define栏填写USE_STDPERIPH_DRIVER&#13;
- debug&#13;
  - 调试器选择ST-link&#13;
  - setting&#13;
    - flash download &#13;
      - 选择reset and run&#13;
- main.c最后一行是空格。</description><guid isPermaLink="true">https://rottenwooood.github.io/post/jiang-ke-da-STM32-xue-xi-bi-ji.html</guid><pubDate>Sat, 30 Nov 2024 15:40:00 +0000</pubDate></item><item><title>第一篇博客：你好！世界！</title><link>https://rottenwooood.github.io/post/di-yi-pian-bo-ke-%EF%BC%9A-ni-hao-%EF%BC%81-shi-jie-%EF%BC%81.html</link><description>`cout &lt;&lt; 'hello world!'`&#13;
`hello world!`。</description><guid isPermaLink="true">https://rottenwooood.github.io/post/di-yi-pian-bo-ke-%EF%BC%9A-ni-hao-%EF%BC%81-shi-jie-%EF%BC%81.html</guid><pubDate>Fri, 01 Nov 2024 17:07:45 +0000</pubDate></item></channel></rss>